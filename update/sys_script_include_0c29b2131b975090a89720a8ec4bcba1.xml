<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_datasilos.RecordInheritVisibilityFromRelatedRecords</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>RecordInheritVisibilityFromRelatedRecords</name>
        <script><![CDATA[function RecordInheritVisibilityFromRelatedRecords(record)
{
	var GetArrayValue = x_snc_devtools.GetArrayValue;
	var GetBoolValue = x_snc_devtools.GetBoolValue;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetIntegerValue = x_snc_devtools.GetIntegerValue;
	var RenderValue = x_snc_devtools.RenderValue;

	var aRelatedRecords = GetRelatedRecords(record);
	
	for (var nIndex = 0; nIndex < aRelatedRecords.length; nIndex++)
	{
		// Global visibility
		if (RecordGetGlobalValue(aRelatedRecords[nIndex]))
		{
			RecordSetGlobalValue(record,true);
		}
		
		// Group Whitelist
		var strGroupWhitelist = RecordGetGroupWhitelistValue(aRelatedRecords[nIndex]);
		var aGroupsWhitelist = GetArrayValue(strGroupWhitelist);
		aGroupsWhitelist.forEach( function(strGroupSysId)
		{
			RecordAddGroupToWhitelist(record,strGroupSysId);
		});		
			
		// Silo Supervisor whitelist
		var strSupervisorSiloWhitelist = RecordGetSupervisorWhitelistValue(aRelatedRecords[nIndex]);
		var aSupervisorSiloWhitelist = GetArrayValue(strSupervisorSiloWhitelist);
		aSupervisorSiloWhitelist.forEach( function(strSiloSysId)
		{
			RecordAddSiloToSupervisorWhitelist(record,strSiloSysId);
		});		
		
		// Security Clearance
		RecordSetSecurityClearanceValue(
			record,
			Math.max(
				RecordGetSecurityClearanceValue(record),
				RecordGetSecurityClearanceValue(aRelatedRecords[nIndex])));
	}
	/*Debug('RecordInheritVisibilityFromRelatedRecords: Result: '+RenderValue(record) + 'Based on related records: '+RenderValue(aRelatedRecords));*/
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-09-22 12:26:14</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>0c29b2131b975090a89720a8ec4bcba1</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>RecordInheritVisibilityFromRelatedRecords</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_0c29b2131b975090a89720a8ec4bcba1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-03-18 12:40:59</sys_updated_on>
    </sys_script_include>
</record_update>

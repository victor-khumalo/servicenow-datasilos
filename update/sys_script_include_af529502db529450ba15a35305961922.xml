<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_datasilos.GetSilosFromUserByTypes</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Returns all silos that the user belongs to, filtered by the type of the group in the silo.</description>
        <name>GetSilosFromUserByTypes</name>
        <script><![CDATA[function GetSilosFromUserByTypes(strUserSysId, aTypes)
{
	var RenderValue = x_snc_devtools.RenderValue;
	var ArrayUnique = x_snc_devtools.ArrayUnique;
	var GetArrayValue = x_snc_devtools.GetArrayValue;

	aTypes = GetArrayValue(aTypes);
	
	var aUserGroups = GetGroupsFromUser(strUserSysId);
	//Debug('GetSilosFromUserByTypes: GetGroupsFromUser: '+RenderValue(aUserGroups));

	var aUserSilos = [];

	// Identify the user's silos based on its groups
	if (aUserGroups.length > 0)
	{
		var grSilosToGroups = new GlideRecord('x_snc_datasilos_m2m_groups_datasilos');
		var queryGroups = grSilosToGroups.addQuery('group','=',aUserGroups[0]);
		for (var nGroupIndex = 1; nGroupIndex < aUserGroups.length; nGroupIndex++)
		{
			queryGroups.addOrCondition('group','=',aUserGroups[nGroupIndex]);
		}

		if (aTypes.length > 0)
		{
			var queryTypes = grSilosToGroups.addQuery('type','=',aTypes[0]);
			for (var nTypeIndex = 1; nTypeIndex < aTypes.length; nTypeIndex++)
			{
				query.addOrCondition('type','=',aTypes[nTypeIndex]);
			}
		}
		
		//Debug('GetSilosFromUserByTypes: grSilosToGroups query: '+RenderValue(grSilosToGroups.getEncodedQuery()));
		
		grSilosToGroups.query();
		while (grSilosToGroups.next())
		{
			aUserSilos.push(grSilosToGroups.getValue('datasilo'));
		}
	}
	//Debug('GetSilosFromUserByTypes: aUserSilos: '+RenderValue(aUserSilos));
	
	// Remove duplicates
	aUserSilos = ArrayUnique(aUserSilos);
	
	//Debug('GetSilosFromUserByTypes: aUserSilos after ArrayUnique: '+RenderValue(aUserSilos));
	
	return aUserSilos;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-07-30 14:38:36</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>af529502db529450ba15a35305961922</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>GetSilosFromUserByTypes</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_af529502db529450ba15a35305961922</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-06-23 17:29:51</sys_updated_on>
    </sys_script_include>
</record_update>

<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_datasilos.GetConfigInstance</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>GetConfigInstance</name>
        <script><![CDATA[function GetConfigInstance()
{
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetBoolValue = x_snc_devtools.GetBoolValue;
	var GetValue = x_snc_devtools.GetValue;
	var RenderValue = x_snc_devtools.RenderValue;
	var GetIntegerValue = x_snc_devtools.GetIntegerValue;
	
	var strValue = '';
	var bValue = false;
	var config = GetConfigBaseline();
	
	// The global ON/OFF switch
	config['active'] = GetBoolValue(gs.getProperty('x_snc_datasilos.active'));
	
	// Filtering by security clearance ON/OFF switch
	config['security_clearance']['active'] = GetBoolValue(gs.getProperty('x_snc_datasilos.security_clearance.active'));

	// Group filter
	strValue = GetStringValue(gs.getProperty('x_snc_datasilos.group_filter'));
	if (strValue != '')
	{
		config['group_filter'] = strValue; 
	}
	
	// ACL warning ON/OFF switch
	config['acl_warning']['active'] = GetBoolValue(gs.getProperty('x_snc_datasilos.acl_warning.active'));
	
	// ACL warning text
	strValue = GetStringValue(gs.getProperty('x_snc_datasilos.acl_warning.text'));
	if (strValue != '')
	{
		config['acl_warning']['text'] = strValue; 
	}
	
	// Maintenance options
	config['maintenance']['active'] = GetBoolValue(gs.getProperty('x_snc_datasilos.maintenance.active'));
	config['maintenance']['log_frequency'] = GetIntegerValue(gs.getProperty('x_snc_datasilos.maintenance.log_frequency'));

	// Database view protection
	config['database_views']['active'] = GetBoolValue(gs.getProperty('x_snc_datasilos.database_views.active'));	
	
	// Iterate over tables
	Object.keys(config['tables']).forEach( function(strTable)
	{
		// Check if the table is active
		bValue = GetBoolValue(gs.getProperty('x_snc_datasilos.tables.'+strTable+'.active'));
		if (bValue != GetBoolValue(GetValue(config,'tables',strTable,'active')))
		{
			config['tables'][strTable]['active'] = bValue; 
		}
		
		// Check if expensive queries should be avoided
		bValue = GetBoolValue(gs.getProperty('x_snc_datasilos.tables.'+strTable+'.avoid_expensive_queries'));
		if (bValue == true)
		{
			config['tables'][strTable]['avoid_expensive_queries'] = true; 
		}
		
		// Get the user fields for instant access
		strValue = GetStringValue(gs.getProperty('x_snc_datasilos.tables.'+strTable+'.columns.instant_access.sys_user'));
		if (strValue != '')
		{
			config['tables'][strTable]['columns']['instant_access']['sys_user'] = strValue; 
		}
	
		// Get the group fields for whitelist population
		strValue = GetStringValue(gs.getProperty('x_snc_datasilos.tables.'+strTable+'.columns.whitelist_trigger.sys_user_group'));
		if (strValue != '')
		{
			config['tables'][strTable]['columns']['whitelist_trigger']['sys_user_group'] = strValue; 
		}
	});
	
	return config;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-08-19 11:35:36</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>2c18af50db76d890ba15a35305961976</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>GetConfigInstance</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_2c18af50db76d890ba15a35305961976</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-05-17 08:54:48</sys_updated_on>
    </sys_script_include>
</record_update>

<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_datasilos.AccessAnalysis</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>EXPERIMENTAL: Performs an analysis on a list of users against a list of records. Can these users see these records and why?</description>
        <name>AccessAnalysis</name>
        <script><![CDATA[/*

var aUsers = ['3ab6dbd9dbb99050ba15a35305961980'];
var records = {
	incident:
		['e8aac98b1b56d450a89720a8ec4bcbb7']
};

var result = x_snc_datasilos.AccessAnalysis(aUsers,records);

x_snc_devtools.Debug('DataSilos: AccessAnalysis: '+x_snc_devtools.RenderValue(result));


*/






function AccessAnalysis(aUsers,records)
{
	var GetArrayValue = x_snc_devtools.GetArrayValue;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetGroupsFromUser = x_snc_devtools.GetGroupsFromUser;
	var GetBoolValue = x_snc_devtools.GetBoolValue;


	var result = {};
	
	result.users = [];
	
	// Loop over users
	aUsers = GetArrayValue(aUsers);
	for (var nUser = 0; nUser < aUsers.length; nUser++)
	{
		var strUser = aUsers[nUser];
		var user = {};
		user.sys_id = '';
		
		/*
		var grUser = new GlideRecord('sys_user');
		if (grUser.get(strUserId) == false)
		{
			grUser.addQuery('user_name','=',strUserId)
			grUser.query();
		}
		if (grUser.getRowCount() == 1)
		{
			user.sys_id = GetStringValue(grUser.sys_id);
		}
		else
		{
			user.sys_id = GetStringValue(grUser.sys_id);	
		}
		*/
		
		var grUser = new GlideRecord('sys_user');
		if (grUser.get(strUser) == true)
		{
			var strUserSysId = GetStringValue(grUser.sys_id);
			user.sys_id = strUserSysId;
		
			user.user_name = GetStringValue(grUser.user_name);
			user.name = GetStringValue(grUser.name);

			user.groups = [];
			var aGroups = GetGroupsFromUser(strUserSysId);
			for (var nGroup = 0; nGroup < aGroups.length; nGroup++)
			{
				var strGroupSysId = aGroups[nGroup];
				var group = {};
				group.sys_id = strGroupSysId;
				var grGroup = new GlideRecord('sys_user_group');
				if (grGroup.get(strGroupSysId))
				{
					group.name = GetStringValue(grGroup.name);
					group.active = GetBoolValue(grGroup.active);
				}
				else
				{
					group.name = 'INVALID';
				}


				user.groups.push(group);
			}

			user.silos = [];
			var aSilos = GetSilosFromUser(strUserSysId);
			for (var nSilo = 0; nSilo < aSilos.length; nSilo++)
			{
				var strSiloSysId = aSilos[nSilo];
				var silo = {};
				silo.sys_id = strSiloSysId;
				var grSilo = new GlideRecord('x_snc_datasilos_datasilos');
				if (grSilo.get(strSiloSysId))
				{
					silo.name = grSilo.getValue('name')
				}
				else
				{
					silo.name = 'INVALID';
				}
				user.silos.push(silo);
			}
		}
		else
		{
			user.name = 'INVALID';
		}

		result.users.push(user);
		//}
		
	}

	return result;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-01-27 14:00:33</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>47e091541b0ee814a89720a8ec4bcb3a</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>AccessAnalysis</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_47e091541b0ee814a89720a8ec4bcb3a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-01-27 14:12:16</sys_updated_on>
    </sys_script_include>
</record_update>

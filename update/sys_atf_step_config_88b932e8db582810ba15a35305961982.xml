<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step_config">
    <sys_atf_step_config action="INSERT_OR_UPDATE">
        <active>true</active>
        <batch_order_constraint/>
        <can_mutate_page>false</can_mutate_page>
        <category display_value="Server">317c4dc20b202200a8d7a12cf6673aa8</category>
        <class_name/>
        <class_type>script</class_type>
        <deprecated>false</deprecated>
        <description_generator><![CDATA[function generateDescription()
{
	var GetStringValue = x_snc_devtools.GetStringValue;
	var strTable = GetStringValue(step.inputs.u_table);
    var strDescription = 'Checks if DataSilos features are correctly implemented for table: ['+strTable+']\n';
	return strDescription;
}
generateDescription();]]></description_generator>
        <html_description><![CDATA[<p>Checks if DataSilos features are fully implemented for a given table. This includes business rules, fields, properties, ATF tests and more.  </p>]]></html_description>
        <icon>icon-article-document</icon>
        <inputs/>
        <name>DataSilos - Check table implementation</name>
        <order>9998</order>
        <outputs/>
        <step_env display_value="Server - Independent">6c2bcea1870312009dccc9ded0e3ecca</step_env>
        <step_execution_generator>(function executeStep(inputs, outputs, stepResult, timeout)&#13;
{&#13;
	var GetStringValue = x_snc_devtools.GetStringValue;&#13;
	var GetBoolValue = x_snc_devtools.GetBoolValue;&#13;
	var StringRemoveCharacters = x_snc_devtools.StringRemoveCharacters;&#13;
	var GetArrayValue = x_snc_devtools.GetArrayValue;&#13;
	var IsTableSupported = x_snc_datasilos.IsTableSupported;&#13;
&#13;
	&#13;
	stepResult.setSuccess();&#13;
&#13;
	var strDataSilosAppSysId = 'dafbffebdbb78450ba15a353059619eb';&#13;
&#13;
	var strAppSysId = GetStringValue(inputs.u_application);&#13;
	var strTable = GetStringValue(inputs.u_table);&#13;
	&#13;
	var strMessage = 'DataSilos: Checking table: ['+strTable+']\n';&#13;
	&#13;
	&#13;
	// Getting the scope&#13;
	var grApp = new GlideRecord('sys_scope');&#13;
	if (grApp.get(strAppSysId) == false)&#13;
	{&#13;
		strMessage += 'Selected app could not be loaded!\n';&#13;
		stepResult.setFailed();&#13;
	}&#13;
	else&#13;
	{&#13;
	&#13;
		// Determining the scope prefix&#13;
		var strScopePrefix = GetStringValue(grApp.scope);&#13;
		&#13;
		&#13;
		// IsTableSupported&#13;
		var bSupported = IsTableSupported(strTable);&#13;
		if (bSupported == false)&#13;
		{&#13;
			strMessage += 'IsTableSupported("'+strTable+'") returned false! Check the baseline configuration!\n';&#13;
			stepResult.setFailed();&#13;
		}&#13;
&#13;
		// Business rule&#13;
		var strBusinessRuleName = 'DataSilos - '+strTable;&#13;
		strBusinessRuleName = strBusinessRuleName.substring(0,40);&#13;
		var grBR = new GlideRecord('sys_script');&#13;
		grBR.addQuery('name','=',strBusinessRuleName);&#13;
		grBR.addQuery('active','=','true');&#13;
		grBR.addQuery('action_insert','=','true');&#13;
		grBR.addQuery('action_update','=','true');&#13;
		grBR.addQuery('action_query','=','true');&#13;
		grBR.addQuery('advanced','=','true');&#13;
		grBR.addQuery('script','CONTAINS','x_snc_datasilos.ExecuteBusinessRule(current, previous);');&#13;
		grBR.addQuery('when','=','before');&#13;
		grBR.addQuery('order','=',10000);&#13;
		grBR.addQuery('sys_scope','=',strAppSysId);&#13;
		grBR.addQuery('collection','=',strTable);&#13;
		grBR.query();&#13;
		if (grBR.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'No active business rule has been found with name "'+strBusinessRuleName+'" that matches all criteria!\n';&#13;
			stepResult.setFailed();&#13;
		}&#13;
&#13;
&#13;
		// Check if there is a test step that checks for the installation of ACLs for the table&#13;
		var grSAS = new GlideRecord('sys_atf_step');&#13;
		grSAS.addQuery('step_config','=','5f42f662db23d810ba15a353059619cd'); // DataSilos - Check ACLs&#13;
		grSAS.addQuery('active','=',true);&#13;
		grSAS.addQuery('description','CONTAINS','Checks if all ACLs are correctly configured for table: ['+strTable+']');&#13;
		grSAS.addQuery('sys_scope',strAppSysId);&#13;
		grSAS.query();&#13;
		if (grSAS.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'There should be exactly one test step to check the ACLs for table "'+strTable+'"!\n';&#13;
			stepResult.setFailed();&#13;
		}		&#13;
		&#13;
		// Check if there is a test step that checks for the table cross scope access&#13;
/*&#13;
		var grSAS = new GlideRecord('sys_atf_step');&#13;
		grSAS.addQuery('step_config','=','8d6e6be5db28e850ba15a35305961936'); // DevTools - Check table cross scope access&#13;
		grSAS.addQuery('active','=',true);&#13;
		grSAS.addQuery('description','CONTAINS','Checks if full cross scope access is configured for table: ['+strTable+']');&#13;
		grSAS.addQuery('sys_scope',strAppSysId);&#13;
		grSAS.query();&#13;
		if (grSAS.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'There should be exactly one test step to check cross scope access for table "'+strTable+'"!\n';&#13;
			stepResult.setFailed();&#13;
		}			&#13;
	*/	&#13;
		&#13;
		// Check ACL functions&#13;
		function CheckFieldACLs(strTable,strField)&#13;
		{&#13;
			function CheckFieldACL(strTable,strField,strOperation,aRoles)&#13;
			{&#13;
				function CheckACLRole(grSSA, strRole)&#13;
				{&#13;
					//strMessage += x_snc_devtools.RenderValue(grSSA) + '\n';&#13;
					var grSUR = new GlideRecord('sys_user_role');&#13;
					grSUR.addQuery('name','=',strRole);&#13;
					grSUR.query();&#13;
					if (grSUR.next() == false)&#13;
					{&#13;
						strMessage += 'Role "'+strRole+'" not found!\n';&#13;
						stepResult.setFailed();				&#13;
					}&#13;
					var grSSAR = new GlideRecord('sys_security_acl_role');&#13;
					grSSAR.addQuery('sys_security_acl','=',grSSA.getValue('sys_id'));&#13;
					grSSAR.addQuery('sys_user_role','=',grSUR.getValue('sys_id'));&#13;
					grSSAR.addQuery('sys_scope','=',strAppSysId);&#13;
					grSSAR.query();&#13;
					if (grSSAR.getRowCount() != 1)&#13;
					{&#13;
						strMessage += 'ACL named "'+GetStringValue(grSSA.getValue('name'))+'" for the "'+GetStringValue(grSSA.getValue('operation'))+'" operation is not configured to require the "'+strRole+'" role!\n';&#13;
						stepResult.setFailed();&#13;
					}		&#13;
				}&#13;
&#13;
&#13;
				var strName = strTable+'.'+strField;&#13;
				var grSSA = new GlideRecord('sys_security_acl');&#13;
&#13;
				grSSA.addQuery('name','=',strName);&#13;
				grSSA.addQuery('active','=',true);&#13;
				grSSA.addQuery('admin_overrides','=',true);&#13;
				//grSSA.addQuery('description','=',null);&#13;
				grSSA.addQuery('type','=','record');&#13;
				grSSA.addQuery('script','=',null);&#13;
				grSSA.addQuery('condition','=',null);&#13;
				grSSA.addQuery('advanced','=',false);&#13;
				grSSA.addQuery('operation','=',strOperation);&#13;
				grSSA.addQuery('sys_policy','=',null);&#13;
				grSSA.addQuery('sys_scope','=',strAppSysId);&#13;
				grSSA.query();&#13;
				if (grSSA.getRowCount() != 1)&#13;
				{&#13;
					strMessage += 'Not exactly one ACL named "'+strName+'" for the  "'+strOperation+'" operation was found that matches all criteria!\n';&#13;
					stepResult.setFailed();&#13;
				}&#13;
				else&#13;
				{&#13;
					grSSA.next();&#13;
					aRoles = GetArrayValue(aRoles);&#13;
					for (var nRole = 0; nRole &lt; aRoles.length; nRole++)&#13;
					{&#13;
						CheckACLRole(grSSA, aRoles[nRole]);&#13;
					}&#13;
				}&#13;
			}&#13;
&#13;
			//CheckFieldACL(strTable,strField,'create',['x_snc_datasilos.manager']);&#13;
			CheckFieldACL(strTable,strField,'read',['x_snc_datasilos.manager']);&#13;
			CheckFieldACL(strTable,strField,'write',['x_snc_datasilos.manager']);&#13;
			//CheckFieldACL(strTable,strField,'delete',['x_snc_datasilos.manager']);&#13;
		}&#13;
&#13;
&#13;
&#13;
		// Field "Global"&#13;
		var strFieldName = strScopePrefix+'_global'; &#13;
		var grSD = new GlideRecord('sys_dictionary');&#13;
		grSD.addQuery('name','=',strTable);&#13;
		grSD.addQuery('element','=',strFieldName);&#13;
		grSD.addQuery('internal_type','=','boolean');&#13;
		grSD.addQuery('active','=',true);&#13;
		grSD.addQuery('display','=',0);&#13;
		grSD.addQuery('column_label','=','DataSilos Global Visibility');&#13;
		grSD.addQuery('default_value','=','false');&#13;
		grSD.addQuery('mandatory','=',0);&#13;
		grSD.addQuery('reference','=',null);&#13;
		grSD.addQuery('read_only','=',0);&#13;
		grSD.addQuery('audit','=',0);&#13;
		grSD.addQuery('sys_scope','=',strAppSysId);&#13;
		grSD.addQuery('reference_qual_condition','=',null);&#13;
		grSD.addQuery('choice','=',null);&#13;
		grSD.addQuery('text_index','=',0);&#13;
		grSD.addQuery('function_definition','=',null);&#13;
		grSD.query();&#13;
		if (grSD.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'No field named "'+strFieldName+'" was found that matches all criteria!\n';&#13;
			stepResult.setFailed();&#13;
		}&#13;
		CheckFieldACLs(strTable,strFieldName);&#13;
&#13;
&#13;
		&#13;
		// Field "Supervisor Whitelist"&#13;
		var strFieldName = strScopePrefix+'_supervisor_whitelist'; &#13;
		var grSD = new GlideRecord('sys_dictionary');&#13;
		grSD.addQuery('name','=',strTable);	&#13;
		grSD.addQuery('virtual','=',false);&#13;
		grSD.addQuery('dynamic_ref_qual','=',null);&#13;
		grSD.addQuery('use_dynamic_default','=',false);&#13;
		grSD.addQuery('choice_field','=',null);&#13;
		grSD.addQuery('function_field','=',false);&#13;
		grSD.addQuery('mandatory','=',false);&#13;
		grSD.addQuery('reference_cascade_rule','=','none');&#13;
		grSD.addQuery('reference','=','x_snc_datasilos_datasilos');&#13;
		grSD.addQuery('dynamic_default_value','=',null);&#13;
		grSD.addQuery('read_only','=',false);&#13;
		grSD.addQuery('audit','=',false);&#13;
		grSD.addQuery('sys_scope','=',strAppSysId);&#13;
		grSD.addQuery('reference_key','=',null);&#13;
		grSD.addQuery('reference_qual_condition','=',null);&#13;
		grSD.addQuery('dynamic_creation_script','=',null);	&#13;
		grSD.addQuery('internal_type','=','glide_list');		&#13;
		grSD.addQuery('dependent','=',null);		&#13;
		grSD.addQuery('element','=',strFieldName);&#13;
		grSD.addQuery('max_length','=',4000);	&#13;
		grSD.addQuery('use_dependent_field','=',false);	&#13;
		grSD.addQuery('column_label','=','DataSilos Supervisor Whitelist');	&#13;
		grSD.addQuery('use_reference_qualifier','=','simple');	&#13;
		grSD.addQuery('display','=',false);	&#13;
		grSD.addQuery('reference_floats','=',false);		&#13;
		grSD.addQuery('active','=',true);&#13;
		grSD.addQuery('default_value','=',null);&#13;
		grSD.addQuery('choice_table','=',null);		&#13;
		grSD.addQuery('attributes','=','edge_encryption_enabled=true,no_sort=true,slushbucket_ref_no_expand=true');		&#13;
		grSD.addQuery('dependent_on_field','=',null);		&#13;
		grSD.addQuery('reference_qual','=',null);	&#13;
		grSD.addQuery('choice','=',null);&#13;
		grSD.addQuery('text_index','=',0);	&#13;
		grSD.addQuery('dynamic_creation','=',0);		&#13;
		grSD.addQuery('function_definition','=',null);&#13;
		grSD.query();&#13;
		if (grSD.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'No field named "'+strFieldName+'" was found that matches all criteria!\n';&#13;
			stepResult.setFailed();&#13;
		}	&#13;
		CheckFieldACLs(strTable,strFieldName);			&#13;
		&#13;
		&#13;
		// Field "Group Whitelist"&#13;
		var strFieldName = strScopePrefix+'_group_whitelist'; &#13;
		var grSD = new GlideRecord('sys_dictionary');&#13;
		grSD.addQuery('name','=',strTable);	&#13;
		grSD.addQuery('virtual','=',false);&#13;
		grSD.addQuery('dynamic_ref_qual','=',null);&#13;
		grSD.addQuery('use_dynamic_default','=',false);&#13;
		grSD.addQuery('choice_field','=',null);&#13;
		grSD.addQuery('function_field','=',false);&#13;
		grSD.addQuery('mandatory','=',false);&#13;
		grSD.addQuery('reference_cascade_rule','=','none');&#13;
		grSD.addQuery('reference','=','sys_user_group');&#13;
		grSD.addQuery('dynamic_default_value','=',null);&#13;
		grSD.addQuery('read_only','=',false);&#13;
		grSD.addQuery('audit','=',false);&#13;
		grSD.addQuery('sys_scope','=',strAppSysId);&#13;
		grSD.addQuery('reference_key','=',null);&#13;
		grSD.addQuery('reference_qual_condition','=',null);&#13;
		grSD.addQuery('dynamic_creation_script','=',null);	&#13;
		grSD.addQuery('internal_type','=','glide_list');		&#13;
		grSD.addQuery('dependent','=',null);		&#13;
		grSD.addQuery('element','=',strFieldName);&#13;
		grSD.addQuery('max_length','=',4000);	&#13;
		grSD.addQuery('use_dependent_field','=',false);	&#13;
		grSD.addQuery('column_label','=','DataSilos Group Whitelist');	&#13;
		grSD.addQuery('use_reference_qualifier','=','simple');	&#13;
		grSD.addQuery('display','=',false);	&#13;
		grSD.addQuery('reference_floats','=',false);		&#13;
		grSD.addQuery('active','=',true);&#13;
		grSD.addQuery('default_value','=',null);&#13;
		grSD.addQuery('choice_table','=',null);		&#13;
		grSD.addQuery('attributes','=','edge_encryption_enabled=true,no_sort=true,slushbucket_ref_no_expand=true');		&#13;
		grSD.addQuery('dependent_on_field','=',null);		&#13;
		grSD.addQuery('reference_qual','=',null);	&#13;
		grSD.addQuery('choice','=',null);&#13;
		grSD.addQuery('text_index','=',0);	&#13;
		grSD.addQuery('dynamic_creation','=',0);		&#13;
		grSD.addQuery('function_definition','=',null);&#13;
		grSD.query();&#13;
		if (grSD.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'No field named "'+strFieldName+'" was found that matches all criteria!\n';&#13;
			stepResult.setFailed();&#13;
		}	&#13;
		CheckFieldACLs(strTable,strFieldName);&#13;
&#13;
&#13;
&#13;
&#13;
		// Field "Security Clearance"&#13;
		var strFieldName = strScopePrefix+'_security_clearance'; &#13;
		var grSD = new GlideRecord('sys_dictionary');&#13;
		grSD.addQuery('name','=',strTable);&#13;
		grSD.addQuery('element','=',strFieldName);&#13;
		grSD.addQuery('internal_type','=','integer');&#13;
		grSD.addQuery('active','=',true);&#13;
		grSD.addQuery('display','=',0);&#13;
		grSD.addQuery('column_label','=','DataSilos Security Clearance');&#13;
		grSD.addQuery('default_value','=','0');&#13;
		grSD.addQuery('mandatory','=',0);&#13;
		grSD.addQuery('reference','=',null);&#13;
		grSD.addQuery('read_only','=',0);&#13;
		grSD.addQuery('audit','=',0);&#13;
		grSD.addQuery('sys_scope','=',strAppSysId);&#13;
		grSD.addQuery('reference_qual_condition','=',null);&#13;
		grSD.addQuery('choice','=',null);&#13;
		grSD.addQuery('text_index','=',0);&#13;
		grSD.addQuery('function_definition','=',null);&#13;
		grSD.query();&#13;
		if (grSD.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'No field named "'+strFieldName+'" was found that matches all criteria!\n';&#13;
			stepResult.setFailed();&#13;
		}&#13;
		CheckFieldACLs(strTable,strFieldName);	&#13;
&#13;
		&#13;
		// Field "Ghost"&#13;
		var strFieldName = strScopePrefix+'_ghost'; &#13;
		var grSD = new GlideRecord('sys_dictionary');&#13;
		grSD.addQuery('name','=',strTable);&#13;
		grSD.addQuery('active','=',true);&#13;
		grSD.addQuery('default_value','=','false');&#13;
		grSD.addQuery('mandatory','=',0);&#13;
		grSD.addQuery('display','=',0);&#13;
		grSD.addQuery('column_label','=','DataSilos Ghost');&#13;
		grSD.addQuery('reference','=',null);&#13;
		grSD.addQuery('read_only','=',0);&#13;
		grSD.addQuery('audit','=',0);&#13;
		grSD.addQuery('sys_scope','=',strAppSysId);&#13;
		grSD.addQuery('reference_qual_condition','=',null);&#13;
		grSD.addQuery('choice','=',null);&#13;
		grSD.addQuery('internal_type','=','boolean');&#13;
		grSD.addQuery('text_index','=',0);&#13;
		grSD.addQuery('element','=',strFieldName);&#13;
		grSD.addQuery('function_definition','=',null);&#13;
		grSD.query();&#13;
		if (grSD.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'No field named "'+strFieldName+'" was found that matches all criteria!\n';&#13;
			stepResult.setFailed();&#13;
		}&#13;
		CheckFieldACLs(strTable,strFieldName);&#13;
		&#13;
		&#13;
		&#13;
		// Field "Last Maintenance"&#13;
		var strFieldName = strScopePrefix+'_last_maintenance'; &#13;
		var grSD = new GlideRecord('sys_dictionary');&#13;
		grSD.addQuery('name','=',strTable);&#13;
		grSD.addQuery('active','=',true);&#13;
		grSD.addQuery('default_value','=','');&#13;
		grSD.addQuery('mandatory','=',0);&#13;
		grSD.addQuery('display','=',0);&#13;
		grSD.addQuery('column_label','=','DataSilos Last Maintenance');&#13;
		grSD.addQuery('reference','=',null);&#13;
		grSD.addQuery('read_only','=',0);&#13;
		grSD.addQuery('audit','=',0);&#13;
		grSD.addQuery('sys_scope','=',strAppSysId);&#13;
		grSD.addQuery('reference_qual_condition','=',null);&#13;
		grSD.addQuery('choice','=',null);&#13;
		grSD.addQuery('internal_type','=','glide_date_time');&#13;
		grSD.addQuery('text_index','=',0);&#13;
		grSD.addQuery('element','=',strFieldName);&#13;
		grSD.addQuery('function_definition','=',null);&#13;
		grSD.query();&#13;
		if (grSD.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'No field named "'+strFieldName+'" was found that matches all criteria!\n';&#13;
			stepResult.setFailed();&#13;
		}&#13;
		CheckFieldACLs(strTable,strFieldName);	&#13;
	&#13;
		&#13;
		// Schedule Job for Maintenance&#13;
		var strJobName = 'DataSilos - Maintenance - '+strTable;&#13;
		var grSA = new GlideRecord('sysauto_script');&#13;
		grSA.addQuery('name','=',strJobName);&#13;
		grSA.addQuery('sys_scope','=',strAppSysId);&#13;
		//grSA.addQuery('active','=',true);&#13;
		grSA.addQuery('conditional','=',false);&#13;
		//grSA.addQuery('run_as','=','6816f79cc0a8016401c5a33be04be441'); // system admin&#13;
		grSA.addQuery('run_dayofmonth','=',1);&#13;
		grSA.addQuery('run_dayofweek','=',1);&#13;
		grSA.addQuery('run_period','=','1970-01-01 00:10:00');&#13;
		grSA.addQuery('run_type','=','periodically');&#13;
		grSA.addQuery('script','STARTSWITH','var grRecords = new GlideRecord(\''+strTable+'\');');&#13;
		grSA.addQuery('script','ENDSWITH','Maintenance(grRecords);');&#13;
		grSA.addQuery('script','DOES NOT CONTAIN','RecordMaintenance');&#13;
		grSA.query();&#13;
		if (grSA.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'No scheduled job named "'+strJobName+'" was found that matches all criteria!\n';&#13;
			stepResult.setFailed();&#13;
		}		&#13;
		&#13;
		&#13;
		/*&#13;
		&#13;
&#13;
&lt;run_type&gt;periodically&lt;/run_type&gt;&#13;
&lt;script&gt;&#13;
&lt;![CDATA[ var grRecords = new GlideRecord('incident') RecordMaintenance(grRecords); ]]&gt;&#13;
&lt;/script&gt;&#13;
&lt;sys_class_name&gt;sysauto_script&lt;/sys_class_name&gt;&#13;
&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&#13;
&lt;sys_created_on&gt;2020-06-04 15:37:37&lt;/sys_created_on&gt;&#13;
&lt;sys_id&gt;209641881b9dd810a89720a8ec4bcb95&lt;/sys_id&gt;&#13;
&lt;sys_mod_count&gt;18&lt;/sys_mod_count&gt;&#13;
&lt;sys_name&gt;DataSilos - Maintenance - incident&lt;/sys_name&gt;&#13;
&lt;sys_package display_value="DataSilos WORK IN PROGRESS" source="x_snc_datasilos"&gt;dafbffebdbb78450ba15a353059619eb&lt;/sys_package&gt;&#13;
&lt;sys_policy/&gt;&#13;
&lt;sys_scope display_value="DataSilos WORK IN PROGRESS"&gt;dafbffebdbb78450ba15a353059619eb&lt;/sys_scope&gt;&#13;
&lt;sys_update_name&gt;sysauto_script_209641881b9dd810a89720a8ec4bcb95&lt;/sys_update_name&gt;&#13;
&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&#13;
&lt;sys_updated_on&gt;2021-03-21 16:11:25&lt;/sys_updated_on&gt;&#13;
&lt;upgrade_safe&gt;false&lt;/upgrade_safe&gt;&#13;
&lt;/sysauto_script&gt;&#13;
&lt;/xml&gt;&#13;
		&#13;
		*/&#13;
		&#13;
		&#13;
&#13;
		// Module for the table&#13;
		var grSAM = new GlideRecord('sys_app_module');&#13;
		grSAM.addQuery('title','=',strTable);&#13;
		grSAM.addQuery('sys_scope','=',strAppSysId);&#13;
		grSAM.addQuery('roles','=','x_snc_datasilos.manager');&#13;
		grSAM.addQuery('timeline_page','=',null);&#13;
		grSAM.addQuery('device_type','=',null);&#13;
		grSAM.addQuery('mobile_view_name','=','Mobile');&#13;
		grSAM.addQuery('override_menu_roles','=',false);&#13;
		grSAM.addQuery('assessment','=',null);&#13;
		grSAM.addQuery('sys_name','=',strTable);&#13;
		grSAM.addQuery('order','&gt;',10000);&#13;
		grSAM.addQuery('view_name','=','DataSilos');&#13;
		grSAM.addQuery('image','=',null);&#13;
		grSAM.addQuery('window_name','=',null);&#13;
		grSAM.addQuery('query','=','&amp;sysparm_view_forced=true');&#13;
		grSAM.addQuery('active','=',true);&#13;
		grSAM.addQuery('link_type','=','LIST');&#13;
		grSAM.addQuery('filter','=',null);&#13;
		grSAM.addQuery('application','=','949c7f2fdbb78450ba15a353059619d6');&#13;
		grSAM.addQuery('hint','=',null);&#13;
		grSAM.addQuery('name','=',strTable);&#13;
		grSAM.addQuery('report','=',null);&#13;
		grSAM.addQuery('map_page','=',null);&#13;
		//grSAM.addQuery('mobile_title','=',strTable); // For whatever reason, the mobile title is just wrong and no way to set it in the UI&#13;
		grSAM.addQuery('homepage','=',null);&#13;
		grSAM.query();&#13;
		if (grSAM.getRowCount() != 1)&#13;
		{&#13;
			strMessage += 'No application module named "'+strTable+'" was found that matches all criteria!\n';&#13;
			stepResult.setFailed();&#13;
		}&#13;
		&#13;
&#13;
&#13;
&#13;
		// Only for core DataSilos features&#13;
		if (strAppSysId == strDataSilosAppSysId)&#13;
		{&#13;
			// System property "active"&#13;
			var strPropertySuffix = 'tables.'+strTable+'.active';&#13;
			var strPropertyName = 'x_snc_datasilos.'+strPropertySuffix;&#13;
			var grSP = new GlideRecord('sys_properties');&#13;
			grSP.addQuery('name','=',strPropertyName);&#13;
			grSP.addQuery('sys_scope','=',strAppSysId);&#13;
			grSP.addQuery('description','CONTAINS',strTable);  // "incident: Defines if the incident table should be filtered by DataSilos."&#13;
			grSP.addQuery('is_private','=',false);&#13;
			grSP.addQuery('ignore_cache','=',false);&#13;
			grSP.addQuery('suffix','=',strPropertySuffix);&#13;
			grSP.addQuery('type','=','boolean');&#13;
			grSP.addQuery('sys_class_name','=','sys_properties');&#13;
			grSP.addQuery('write_roles','=','x_snc_datasilos.admin');&#13;
			grSP.addQuery('read_roles','=',null);&#13;
			grSP.addQuery('choices','=',null);&#13;
			grSP.query();&#13;
			if (grSP.getRowCount() != 1)&#13;
			{&#13;
				strMessage += 'No system property named "'+strPropertyName+'" was found that matches all criteria!\n';&#13;
				stepResult.setFailed();&#13;
			}	&#13;
&#13;
&#13;
&#13;
			// System property "columns.instant_access.sys_user"&#13;
			var strPropertySuffix = 'tables.'+strTable+'.columns.instant_access.sys_user';&#13;
			var strPropertyName = 'x_snc_datasilos.'+strPropertySuffix;&#13;
			var grSP = new GlideRecord('sys_properties');&#13;
			grSP.addQuery('name','=',strPropertyName);&#13;
			grSP.addQuery('sys_scope','=',strAppSysId);&#13;
			grSP.addQuery('description','CONTAINS',strTable);  // "incident: Defines if the incident table should be filtered by DataSilos."&#13;
			grSP.addQuery('is_private','=',false);&#13;
			grSP.addQuery('ignore_cache','=',false);&#13;
			grSP.addQuery('suffix','=',strPropertySuffix);&#13;
			grSP.addQuery('type','=','string');&#13;
			grSP.addQuery('sys_class_name','=','sys_properties');&#13;
			grSP.addQuery('write_roles','=','x_snc_datasilos.admin');&#13;
			grSP.addQuery('read_roles','=',null);&#13;
			grSP.addQuery('choices','=',null);&#13;
			grSP.query();&#13;
			if (grSP.getRowCount() != 1)&#13;
			{&#13;
				strMessage += 'No system property named "'+strPropertyName+'" was found that matches all criteria!\n';&#13;
				stepResult.setFailed();&#13;
			}		&#13;
&#13;
			// System property "columns.whitelist_trigger.sys_user_group"&#13;
			var strPropertySuffix = 'tables.'+strTable+'.columns.whitelist_trigger.sys_user_group';&#13;
			var strPropertyName = 'x_snc_datasilos.'+strPropertySuffix;&#13;
			var grSP = new GlideRecord('sys_properties');&#13;
			grSP.addQuery('name','=',strPropertyName);&#13;
			grSP.addQuery('sys_scope','=',strAppSysId);&#13;
			grSP.addQuery('description','CONTAINS',strTable);  // "incident: Defines if the incident table should be filtered by DataSilos."&#13;
			grSP.addQuery('is_private','=',false);&#13;
			grSP.addQuery('ignore_cache','=',false);&#13;
			grSP.addQuery('suffix','=',strPropertySuffix);&#13;
			grSP.addQuery('type','=','string');&#13;
			grSP.addQuery('sys_class_name','=','sys_properties');&#13;
			grSP.addQuery('write_roles','=','x_snc_datasilos.admin');&#13;
			grSP.addQuery('read_roles','=',null);&#13;
			grSP.addQuery('choices','=',null);&#13;
			grSP.query();&#13;
			if (grSP.getRowCount() != 1)&#13;
			{&#13;
				strMessage += 'No system property named "'+strPropertyName+'" was found that matches all criteria!\n';&#13;
				stepResult.setFailed();&#13;
			}		&#13;
&#13;
			&#13;
			// System property "avoid_expensive_queries"&#13;
			var strPropertySuffix = 'tables.'+strTable+'.avoid_expensive_queries';&#13;
			var strPropertyName = 'x_snc_datasilos.'+strPropertySuffix;&#13;
			var grSP = new GlideRecord('sys_properties');&#13;
			grSP.addQuery('name','=',strPropertyName);&#13;
			grSP.addQuery('sys_scope','=',strAppSysId);&#13;
			grSP.addQuery('description','CONTAINS',strTable);  // "incident: Defines if the incident table should be filtered by DataSilos."&#13;
			grSP.addQuery('is_private','=',false);&#13;
			grSP.addQuery('ignore_cache','=',false);&#13;
			grSP.addQuery('suffix','=',strPropertySuffix);&#13;
			grSP.addQuery('type','=','boolean');&#13;
			grSP.addQuery('sys_class_name','=','sys_properties');&#13;
			grSP.addQuery('write_roles','=','x_snc_datasilos.admin');&#13;
			grSP.addQuery('read_roles','=',null);&#13;
			grSP.addQuery('choices','=',null);&#13;
			grSP.query();&#13;
			if (grSP.getRowCount() != 1)&#13;
			{&#13;
				strMessage += 'No system property named "'+strPropertyName+'" was found that matches all criteria!\n';&#13;
				stepResult.setFailed();&#13;
			}				&#13;
&#13;
			// Check if all tests steps are configured in the "DataSilos - Test data sanity" test&#13;
			var grSAS = new GlideRecord('sys_atf_step');&#13;
			grSAS.addQuery('test','=','e87e8edf1b2c2090a89720a8ec4bcbaf'); // not ideal: better use the test name&#13;
			grSAS.addQuery('step_config','=','0270b8005f30220012b44adb7f46666a'); // Record Query&#13;
			grSAS.addQuery('active','=',true);&#13;
			grSAS.addQuery('description','CONTAINS','starts with _ATF_DATASILOS_');&#13;
			grSAS.addQuery('table',strTable);&#13;
			grSAS.query();&#13;
			if (grSAS.getRowCount() != 1)&#13;
			{&#13;
				strMessage += 'In the test "Test data sanity" no test step has been configured for table "'+strTable+'"!\n';&#13;
				stepResult.setFailed();&#13;
			}		&#13;
		}&#13;
&#13;
&#13;
		/*&#13;
&#13;
&#13;
&#13;
		var grSAS = new GlideRecord('sys_atf_step');&#13;
	if (grSAS.get('7137ad65db6aa410ba15a3530596191a')) {&#13;
		gs.info('warning_message: ' + grSAS.getValue('warning_message'));&#13;
		gs.info('step_config: ' + grSAS.getValue('step_config'));&#13;
		gs.info('notes: ' + grSAS.getValue('notes'));&#13;
		gs.info('test: ' + grSAS.getValue('test'));&#13;
		gs.info('inputs: ' + grSAS.getValue('inputs'));&#13;
		gs.info('active: ' + grSAS.getValue('active'));&#13;
		gs.info('description: ' + grSAS.getValue('description'));&#13;
		gs.info('sys_scope: ' + grSAS.getValue('sys_scope'));&#13;
		gs.info('timeout: ' + grSAS.getValue('timeout'));&#13;
		gs.info('order: ' + grSAS.getValue('order'));&#13;
		gs.info('inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.enforce_security: ' + grSAS.getValue('inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.enforce_security'));&#13;
		gs.info('enforce_security: ' + grSAS.getValue('enforce_security'));&#13;
		gs.info('inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.assert_type: ' + grSAS.getValue('inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.assert_type'));&#13;
		gs.info('assert_type: ' + grSAS.getValue('assert_type'));&#13;
		gs.info('inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.table: ' + grSAS.getValue('inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.table'));&#13;
		gs.info('table: ' + grSAS.getValue('table'));&#13;
		gs.info('inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.field_values: ' + grSAS.getValue('inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.field_values'));&#13;
		gs.info('field_values: ' + grSAS.getValue('field_values'));&#13;
	}&#13;
&#13;
		Security restricted: Read operation on table 'sys_atf_step' from scope 'DataSilos WORK IN PROGRESS' was granted and added to 'DataSilos WORK IN PROGRESS' cross scope privileges&#13;
	x_snc_datasilos: warning_message: null&#13;
	x_snc_datasilos: step_config: 0270b8005f30220012b44adb7f46666a&#13;
	x_snc_datasilos: notes: null&#13;
	x_snc_datasilos: test: e87e8edf1b2c2090a89720a8ec4bcbaf&#13;
	x_snc_datasilos: inputs: null&#13;
	x_snc_datasilos: active: 1&#13;
	x_snc_datasilos: description: Validate there are not any records in 'change_task' matching query:&#13;
	Short description starts with _ATF_DATASILOS_&#13;
	With a failure timeout of 5 Seconds&#13;
	x_snc_datasilos: sys_scope: dafbffebdbb78450ba15a353059619eb&#13;
	x_snc_datasilos: timeout: 1970-01-01 00:00:05&#13;
	x_snc_datasilos: order: 7&#13;
	x_snc_datasilos: inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.enforce_security: null&#13;
	x_snc_datasilos: enforce_security: null&#13;
	x_snc_datasilos: inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.assert_type: null&#13;
	x_snc_datasilos: assert_type: null&#13;
	x_snc_datasilos: inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.table: null&#13;
	x_snc_datasilos: table: change_task&#13;
	x_snc_datasilos: inputs.var__m_atf_input_variable_0270b8005f30220012b44adb7f46666a.field_values: null&#13;
	x_snc_datasilos: field_values: null&#13;
&#13;
		*/&#13;
	}&#13;
	&#13;
	&#13;
	stepResult.setOutputMessage(strMessage);&#13;
	&#13;
}(inputs, outputs, stepResult, timeout));&#13;
</step_execution_generator>
        <sys_class_name>sys_atf_step_config</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-11-02 16:24:42</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>88b932e8db582810ba15a35305961982</sys_id>
        <sys_mod_count>121</sys_mod_count>
        <sys_name>DataSilos - Check table implementation</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_atf_step_config_88b932e8db582810ba15a35305961982</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-06-30 12:24:50</sys_updated_on>
        <template_reminder>TBD</template_reminder>
        <type display_value="Test Step" name="sys_atf_step">5b7f14d5dc3603009d040dd064413274</type>
        <wizard_redirect/>
    </sys_atf_step_config>
    <sys_variable_value action="delete_multiple" query="document_key=88b932e8db582810ba15a35305961982"/>
</record_update>
